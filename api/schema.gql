# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Car {
  brand: String!
  color: String!
  downPayment: Float!

  """Fuel type enum : Gas, Diesel, Electric ..."""
  fuelType: FuelType!

  """Unique id of the car"""
  id: Int!
  location: String!

  """Car Owner"""
  owner: User!
  rentalPrice: Float!
  rentalscars: Rentalcar
  seatsNumber: Int!
  title: String!
}

input CarFilter {
  availabilityFrom: DateTime
  availabilityTo: DateTime
  brand: String
  color: String
  location: String
  maxDownPayment: Float
  maxPrice: Float
  minDownPayment: Float
  minPrice: Float
  search: String
}

type CarWithImages {
  brand: String!
  color: String!
  downPayment: Float!

  """Fuel type enum : Gas, Diesel, Electric ..."""
  fuelType: FuelType!

  """Unique id of the car"""
  id: Int!
  images: [Image!]
  location: String!
  rentalPrice: Float!
  seatsNumber: Int!
  title: String!
}

input CreateCarInput {
  brand: String!
  color: String!
  downPayment: Float!

  """Fuel type enum : Gas, Diesel, Electric ..."""
  fuelType: FuelType! = Gas
  location: String!
  ownerId: Int!
  rentalPrice: Float!
  seatsNumber: Int! = 4
  title: String!
}

input CreateRentalcarInput {
  carId: Int!
  reservedfrom: DateTime!
  reservedto: DateTime!
}

input CreateUserInput {
  FamilyName: String!
  email: String!
  name: String!
  password: String!
  phoneNumber: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum EntityType {
  Car
  User
}

type FileAssignment {
  """Id of the entity that has this file"""
  elementId: Int!

  """Element type enum : Car (1), User (1 << 1) ..."""
  elementType: EntityType!
  fileUrl: String!
  id: Int!
}

type FilterOptions {
  brands: [String!]!
  colors: [String!]!
  locations: [String!]!
  maxDailyRentalPrice: Float!
  maxDownPayment: Float!
}

enum FuelType {
  Diesel
  Electric
  Gas
}

type Image {
  url: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createCar(createCarInput: CreateCarInput!): Car!
  createFileAssignment(elementId: Int!, elementType: EntityType!, fileUrl: String!): FileAssignment!
  createRentalcar(input: CreateRentalcarInput!): Rentalcar!
  createUser(createUserInput: CreateUserInput!): User!
  deleteRentalcarByCarId(carId: Float!): String!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  removeCar(id: Int!): Car!
  removeFileAssignment(id: Int!): FileAssignment!
  signup(SignUpUserInput: SignUpUserInput!): User!
  updateCar(updateCarInput: UpdateCarInput!): Car!
  updateFileAssignment(updateFileAssignmentInput: UpdateFileAssignmentInput!): FileAssignment!
}

type Query {
  availableFilters: FilterOptions!
  car(id: Int!): Car!
  cars: [Car!]!
  carsById(id: Int!): [Car!]!
  fileAssignment(id: Int!): FileAssignment!
  filteredCars(filter: CarFilter): [CarWithImages!]!
  rentalHistoryByCarId(carId: Int!): [Rentalcar!]!
  user(email: String!): User!
  userCars: [Car!]!
  users: [User!]!
}

type Rentalcar {
  car: Car!
  id: Float!
  reservedfrom: DateTime!
  reservedto: DateTime!
}

input SignUpUserInput {
  email: String!
  familyName: String!
  name: String!
  password: String!
  phoneNumber: String!
}

input UpdateCarInput {
  brand: String
  color: String
  downPayment: Float

  """Fuel type enum : Gas, Diesel, Electric ..."""
  fuelType: FuelType = Gas
  id: Int!
  location: String
  ownerId: Int
  rentalPrice: Float
  seatsNumber: Int = 4
  title: String
}

input UpdateFileAssignmentInput {
  elementId: Int
  elementType: EntityType
  fileUrl: String
  id: Int!
}

type User {
  FamilyName: String
  carsCreatedByUser: [Car!]
  email: String
  id: ID!
  name: String!
  passwordHash: String!
  phoneNumber: String
}